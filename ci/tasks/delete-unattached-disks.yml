---
# this simple tasksm get´s running vm´s of an azurestack subscription
platform: linux

inputs:
 - name: config

params:
  PROFILE: "2019-03-01-hybrid"
  CA_CERT: cert/root.pem
  ENDPOINT_RESOURCE_MANAGER: "https://management.local.azurestack.external"
  VAULT_DNS:  ".vault.local.azurestack.external"
  SUFFIX_STORAGE_ENDPOINT: "local.azurestack.external"
  AZURE_TENANT_ID:
  AZURE_CLIENT_ID:
  AZURE_CLIENT_SECRET:
  AZURE_SUBSCRIPTION_ID:
  AZURE_CLI_CA_PATH: "/usr/local/lib/python3.6/site-packages/certifi/cacert.pem"
  RESOURCE_GROUP:



run:
  path: bash
  args:
  - "-c"
  - |
    set -eu
    cat $(pwd)/config/${CA_CERT} >> ${AZURE_CLI_CA_PATH}
    az cloud register -n AzureStackUser \
    --endpoint-resource-manager ${ENDPOINT_RESOURCE_MANAGER} \
    --suffix-storage-endpoint ${SUFFIX_STORAGE_ENDPOINT} \
    --suffix-keyvault-dns ${VAULT_DNS}
    az cloud set -n AzureStackUser
    az cloud update --profile ${PROFILE}
    az cloud list --output table
    az login --service-principal \
     -u ${AZURE_CLIENT_ID} \
     -p ${AZURE_CLIENT_SECRET} \
     --tenant ${AZURE_TENANT_ID}
    set -eux
    az account set --subscription ${AZURE_SUBSCRIPTION_ID}
    IDS=$(az disk list --resource-group ${RESOURCE_GROUP} --query '[?managedBy==`null`].[id]' --output tsv)
    if [ -z "${IDS}" ]
    then
          echo "no unattached disks found"
    else
              az disk delete --ids ${IDS} --yes
    fi
